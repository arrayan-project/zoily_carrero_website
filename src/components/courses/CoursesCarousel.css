/**
 * Estilos para el carrusel de cursos.
 * Incluye animaciones, transiciones y pseudo-elementos para los slides y el contenido.
 *
 * @file CoursesCarousel.css
 */
  #courses-carousel {
  position: relative;
  width: 100%;
  height: 100vh; /* o la altura que necesites, ej. h-screen de Tailwind */
  overflow: hidden; /* Muy importante para que no se vea nada fuera del slide actual */
}

  /*
  Wrapper exterior del slide (item-wrapper).
  Este div persistirá y su opacidad se animará para el crossfade.
  Inicialmente es transparente si no tiene clases de animación activas,
  o se basa en la opacidad final de su animación.
*/
.item-wrapper {
  width: 100%;
  height: 100%;
  /* Opacidad por defecto es 1, las animaciones la modificarán */
}

/* Estilo para el slide individual (.item dentro de .item-wrapper) */
/* Usamos un selector más específico para evitar conflictos si '.item' es una clase genérica */
/* Este .item ahora sería el .slide-content-wrapper > .item si sigues esa estructura,
   o directamente el contenido si .item-wrapper es el único que anima opacidad
   y el contenido interno se re-renderiza con key.
   Para la última implementación, el .item-wrapper es el que tiene las clases
   carousel-item-fade-out/in, y el .slide-content-wrapper (con key) tiene .animate-fadeIn.
*/



  #courses-carousel .slide-content-wrapper > .item { /* Asumiendo la estructura con slide-content-wrapper */
  width: 100%;
  height: 100%;
  position: relative; /* Para posicionar la imagen y ServicesContent dentro */
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}

/*
  Animación de fundido para el contenido interno de cada slide (slide-content-wrapper).
  Esta se dispara cuando el key={currentIndex} cambia en slide-content-wrapper.
*/
@keyframes contentFadeInAnimation {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Clase que aplica la animación de fundido al contenido interno del slide */
.animate-fadeIn {
  animation: contentFadeInAnimation 0.7s ease-in-out forwards; /* 'forwards' mantiene el estado final */
}

/* Animaciones para el crossfade del item-wrapper */
@keyframes carouselItemFadeOut {
  from { opacity: 1; }
  to { opacity: 0; }
}
.carousel-item-fade-out {
  animation: carouselItemFadeOut 0.3s ease-in-out forwards;
}

@keyframes carouselItemFadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}
.carousel-item-fade-in {
  animation: carouselItemFadeIn 0.3s ease-in-out forwards;
}

/* Animaciones para el contenido textual dentro de cada slide */
  #courses-carousel .content .name, 
  #courses-carousel .content .description 
  #courses-carousel .content button { /* Asumiendo que el botón "Ver más" también se anima así */
  opacity: 0; /* Estado inicial para la animación */
  animation: animateContent 1s ease-in-out forwards;
}

#courses-carousel .content .description {
  animation-delay: 0.3s;
}

#courses-carousel .content button { /* Si el botón "Ver más" tiene esta animación */
  animation-delay: 0.6s;
}

@keyframes animateContent {
  from {
    opacity: 0;
    transform: translateY(20px); /* Sutilmente desde abajo */
    filter: blur(5px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
    filter: blur(0);
  }
}
